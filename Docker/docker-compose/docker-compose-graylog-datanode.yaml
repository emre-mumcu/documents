# docker compose -p graylog-stack -f .\docker-compose-graylog-datanode.yaml up -d
services:
  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb:
    image: mongo:8.0
    container_name: mongodb8
    hostname: mongodb8
    restart: "unless-stopped" #"on-failure" #unless-stopped #always
    volumes:
      - "mongodb_data:/data/db"
      - "mongodb_config:/data/configdb"
    ports:
      - '127.0.0.1:27017:27017/tcp' #- "27017:27017"
    networks:
      - graylog_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5	  
    
  # For DataNode setup, graylog starts with a preflight UI, this is a change from just using OpenSearch/Elasticsearch.
  # Please take a look at the README at the top of this repo or the regular docs for more info.
  # Graylog Data Node: https://hub.docker.com/r/graylog/graylog-datanode

  # ⚠️ Make sure this is set on the host before starting:
  # echo "vm.max_map_count=262144" | sudo tee -a /etc/sysctl.conf
  # sudo sysctl -p
  datanode:
    image: "graylog/graylog-datanode:6.3"
    hostname: "datanode"
    environment:
      GRAYLOG_DATANODE_NODE_ID_FILE: "/var/lib/graylog-datanode/node-id"
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      GRAYLOG_DATANODE_PASSWORD_SECRET: "0123456789ABCDEF"
      GRAYLOG_DATANODE_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "8999:8999/tcp"   # DataNode API
      - "9200:9200/tcp"
      - "9300:9300/tcp"
    networks:
      - graylog_network  
    volumes:
      - "graylog-datanode:/var/lib/graylog-datanode"
    restart: "on-failure" 

  graylog:
    image: graylog/graylog:6.3
    container_name: graylog6
    hostname: graylog6
    domainname: internal
    environment:
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      # GRAYLOG_DATANODE_PASSWORD_SECRET and GRAYLOG_PASSWORD_SECRET MUST be the same value
      - GRAYLOG_PASSWORD_SECRET=0123456789ABCDEF
      - GRAYLOG_ROOT_PASSWORD_SHA2=1967bfa68e40013348762184193c2a457be7a6975d1d5da6a8161d0e9165dbbb
      #- GRAYLOG_MONGO_URI=mongodb://mongodb:27017/graylog
      - GRAYLOG_MONGODB_URI=mongodb://mongodb:27017/graylog
      - GRAYLOG_OPENSEARCH_URI='opensearch:9200'      
      #- GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - GRAYLOG_REPORT_DISABLE_SANDBOX="true"
      - GRAYLOG_TELEMETRY_ENABLED=false
      #- GRAYLOG_ELASTICSEARCH_HOSTS="http://opensearch:9200"
      #- GRAYLOG_NODE_ID_FILE="/usr/share/graylog/data/config/node-id"
      #- GRAYLOG_HTTP_BIND_ADDRESS="0.0.0.0:9000"
    restart: unless-stopped
    ports:
      - "9000:9000/tcp"     # Graylog web interface and REST API
      - "5044:5044/tcp"     # Graylog beats
      - "5140:5140/tcp" 	# Syslog TCP
      - "5140:5140/udp" 	# Syslog UDP 
      - "1514:1514" 		# Syslog
      - "1515:1515" 		# Syslog      
      - "12201:12201/tcp" 	# GELF TCP
      - "12201:12201/udp" 	# GELF UDP      
      - "13301:13301/tcp" 	# Forwarder data      
      - "13302:13302/tcp"   # Forwarder config
    depends_on: # service names
      mongodb:
        condition: service_started
      datanode:
        condition: service_started
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 -- /docker-entrypoint.sh"
    networks:
      - graylog_network
    volumes:
      - "graylog_data:/usr/share/graylog/data/data" 

networks:
  graylog_network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
  graylog-datanode:
  graylog_data:
    driver: local